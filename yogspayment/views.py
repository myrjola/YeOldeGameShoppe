from django.shortcuts import render, render_to_response, get_object_or_404
from django.contrib.auth import authenticate, login, logout
from django.http import HttpResponseRedirect, HttpResponse
from django.template import RequestContext
from django.contrib.auth.decorators import login_required
from django.core.mail import send_mail
from django.db.models import Avg
import json as simplejson
import hashlib
import time
from datetime import datetime
import json
from yogsauth.decorators import player_required
from hashlib import md5
from django.conf import settings
from django.contrib.auth import get_user_model
from yogsgame.models import Game, GameLicense, HighScore

@player_required
def buy(request, gameID):
	context = RequestContext(request)
	user = request.user
	game = get_object_or_404(Game, id=gameID)
	pid = user.username + "_" + str(game.id) + "_" + str(time.time())
	amount = game.price
	sid = getattr(settings, "PAYMENT_SELLER_ID",none)
	secret_key = getattr(settings, "PAYMENT_SECRET_KEY",none)
	success_url = "http://localhost:8000/shop/success/"
	cancel_url = "http://localhost:8000/shop/cancel/"
	error_url = "http://localhost:8000/shop/error/"
	checksumstr = "pid={}&sid={}&amount={}&token={}".format(pid, sid, amount, secret_key)
	m = md5(checksumstr.encode('ascii')).hexdigest()

	context = {
		'pid' : pid,
		'sid' : sid,
		'amount' : amount,
		'checksum' : m,
		'success_url' : success_url,
		'cancel_url' : cancel_url,
		'error_url' : error_url,
		'game' : game,
		'checksumstr' : checksumstr
	}
	return render_to_response('buy.html', context=context)


def success(request):
	context = RequestContext(request)
	pid = request.GET.get('pid', '').split("_")
	gameID = int(pid[1])
	buyer = pid[0]
	game = get_object_or_404(Game, id=gameID)
	user = get_user_model().objects.get(pk=int(buyer))

	#check if the url was generated by the service (not forged by the user)


	# check if the url belongs to the user
	# if str(user) != str(buyer):
	# 	text = "Wrong URL<br><a href=\"http://localhost:8000/game/\">Return to Homepage</a>"

	# Check if the user already owns the game
	if not game.get_gamelicense_for_user(user):
		game.buy_with_user(user)


		title = "Payment successful!"
		text = "Play the new game!"
		url = "/game/shop/"
		linkText = "Return to Games"

	else:
		title = "You have already purchased this game."
		url = "/game/"
		linkText = "Return to Games"

	return render(request, "success.html")

@player_required
def cancel(request):
	title = "Payment cancelled!"
	url = "/game/shop/"
	linkText = "Return to Games"
	return render(request, "message.html",
		{
			"title": title,
			"linkUrl": url,
			"linkText": linkText
		}
	)


@login_required
def error(request):

	title = "Payment failed!"
	url = "/game/shop/"
	linkText = "Return to Games"

	return render(request, "message.html",
		{
			"title": title,
			"linkUrl": url,
			"linkText": linkText
		}
	)
